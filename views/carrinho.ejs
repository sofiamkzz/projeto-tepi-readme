<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Carrinho de Compras - Viva Colors</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        /* Paleta de cores refinadas e elegantes */
        :root {
            --main-color: #d42249;
            /* Cor vibrante e sofisticada */
            --accent-color: #ffccf9;
            --secondary-color: #6a0572;
            /* Roxo sofisticado */
            --light-color: #fff4f9;
        }

        body {
            background-color: var(--light-color);
            font-family: 'Poppins', sans-serif;
            color: var(--secondary-color);
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }

        main {
            flex: 1;
        }

        /* Cabeçalho com gradiente vibrante */
        .bg-gradient {
            background: linear-gradient(90deg, var(--main-color), var(--accent-color));
        }

        /* Estilo para o título h2 */
        h2 {
            color: var(--main-color);
            font-weight: bold;
        }

        /* Botões mais sofisticados com gradiente */
        .btn-main {
            background: linear-gradient(90deg, var(--main-color), var(--accent-color));
            border: none;
            color: white;
            padding: 10px 20px;
            font-weight: bold;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            border-radius: 30px;
        }

        .btn-main:hover {
            box-shadow: 0px 6px 15px rgba(0, 0, 0, 0.1);
            transform: translateY(-3px);
        }

        /* Estilo das cartas do carrinho */
        .card {
            margin-bottom: 30px;
            border: none;
            transition: transform 0.3s ease-in-out;
        }

        .card:hover {
            transform: translateY(-10px);
        }

        /* Footer elegante */
        footer {
            background-color: #d6336c;
            /* Cor personalizada do footer */
            color: white;
            padding: 20px 0;
        }

        /* Estilo do novo footer */
        .bg-light-pink {
            background: #d42249;
            background: linear-gradient(90deg, #e70a3a8f 0%, rgba(255, 255, 255, 0) 48%, rgba(209, 11, 54, 0.564) 100%);
        }

        .text-dark-pink {
            color: #6a0572;
        }

        .navbar {
            background: #d42249;
            background: linear-gradient(90deg, #e70a3a8f 20%, rgba(255, 255, 255, 0) 78%, rgba(209, 11, 54, 0.564) 100%);
        }

        .navbar-brand {
            color: #ffffff !important;
            font-weight: bold;
        }

        img {
            border-radius: 25px;
        }

        /* Badge para o carrinho de compras */
        .badge {
            background-color: var(--main-color);
            font-size: 0.8rem;
        }
    </style>
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-light bg-white shadow-sm">
        <div class="container">
            <div class="navbar-brand fw-bold">
                <img src="/images/logo.jpg" alt="Logo Luivin's" style="height: 50px;">
                Viva Colors
            </div>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item cart-icon">
                        <a class="nav-link" href="carrinho.html">
                            <i class="fas fa-shopping-cart"></i>
                            <span class="badge">
                                <%= cartItems ? cartItems.length : 0 %>
                            </span>
                        </a>
                    </li>
                    <li class="nav-item"><a class="nav-link" href="/">Início</a></li>
                    <li class="nav-item"><a class="nav-link" href="favoritos">Favoritos</a></li>
                    <li class="nav-item"><a class="nav-link" href="/logout">Sair</a></li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Carrinho -->
    <main class="container my-5">
        <h2 class="text-center mb-4">Seu Carrinho de Compras</h2>
        <table class="table table-bordered">
            <thead class="bg-light">
                <tr>
                    <th>Produto</th>
                    <th>Quantidade</th>
                    <th>Preço</th>
                    <th>Ações</th>
                </tr>
            </thead>
            <tbody>
                <% if (cartItems && cartItems.length === 0) { %>
                    <tr>
                        <td colspan="4" class="text-center">Seu carrinho está vazio.</td>
                    </tr>
                    <% } else { %>
                        <% cartItems.forEach(function(item) { %>
                            <tr>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <img src="<%= item.Product.imageUrl %>" alt="<%= item.Product.name %>"
                                            aria-label="<%= item.Product.name %>" style="width: 50px; height: auto;"
                                            class="me-3">
                                        <%= item.Product.name %>
                                    </div>
                                </td>
                                <td>
                                    <input type="number" class="form-control" value="<%= item.quantity %>" min="1"
                                        id="quantity-<%= item.id %>">
                                </td>
                                <td id="price-<%= item.idCartItem %>">R$ <%= item.Product.price %>
                                </td>
                                <td>
                                    <a href="/carrinho/remover/<%= item.id %>" class="btn btn-danger"
                                        onclick="return confirm('Você tem certeza que deseja remover este item?')">Remover</a>                                    
                                </td>
                            </tr>
                            <% }); %>
                                <div class="text-end">
                                    <h4 id="total">Total: R$ <%= (Number(total) || 0).toFixed(2) %>
                                    </h4>
                                    <a href="pagamento" class="btn btn-primary">Finalizar Compra</a>
                                </div>
                                <% } %>
            </tbody>

        </table>
    </main>

    <script>
        function updateQuantity(itemId) {
            const newQuantity = document.getElementById(`quantity-${itemId}`).value;

            if (newQuantity < 1) {
                alert("A quantidade não pode ser menor que 1.");
                return;
            }

            // Enviar a nova quantidade para o servidor via AJAX ou redirecionamento
            fetch(`/atualizar-carrinho/${itemId}?quantity=${newQuantity}`, {
                method: 'GET'
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();  // Recarrega a página com os dados atualizados
                    } else {
                        alert("Erro ao atualizar a quantidade.");
                    }
                })
                .catch(error => console.error("Erro ao atualizar:", error));
        }

        const updateQuantityInCart = async (req, res) => {
            const cartItemId = req.params.id;
            const quantity = req.query.quantity;

            try {
                const cartItem = await CartItem.findByPk(cartItemId);

                if (!cartItem) {
                    return res.status(404).json({ success: false, message: 'Item não encontrado' });
                }

                const product = await Product.findByPk(cartItem.productId);

                // Verificar se há estoque suficiente
                if (product.stock < quantity) {
                    return res.status(400).json({ success: false, message: 'Estoque insuficiente' });
                }

                cartItem.quantity = quantity;
                await cartItem.save();

                res.json({ success: true });
            } catch (error) {
                console.error(error);
                res.status(500).json({ success: false, message: 'Erro ao atualizar a quantidade' });
            }
        };

    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
